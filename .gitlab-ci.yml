stages:
  - build
  - deploy

variables:
  imgFetch: $CI_REGISTRY_IMAGE:fetch
  imgAuth: $CI_REGISTRY_IMAGE:auth


build-fetch:
  image: docker:19.03.5
  stage: build
  services:
    - docker:19.03.5-dind
  before_script:
    #    - docker login -u "$registry_username" -p "$registry_password" $registry
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - cd "$CI_PROJECT_DIR/fetch"
    - docker build -t $imgFetch .
    - docker push $imgFetch
    - cd "$CI_PROJECT_DIR"
  only:
    - deploy_fetch

deploy-fetch:
  stage: deploy
  script:
    - apt update -y
    - apt install -y sshpass
    - export SSHPASS=$ssh_password
    - sshpass -e ssh -o stricthostkeychecking=no -p $ssh_port $ssh_user "docker pull $img"
    - sshpass -e ssh -o stricthostkeychecking=no -p $ssh_port $ssh_user "docker.compose  -f $ssh_path_api up -d jds_fetch"
  only:
    - deploy_fetch

build-auth:
  image: docker:19.03.5
  stage: build
  services:
    - docker:19.03.5-dind
  before_script:
    #    - docker login -u "$registry_username" -p "$registry_password" $registry
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $imgFetch .
    - docker push $imgFetch
  only:
    - deploy_auth

deploy-auth:
  stage: deploy
  image: docker:19.03.5
  script:
    - apt update -y
    - apt install -y sshpass
    - export SSHPASS=$ssh_password
    - sshpass -e ssh -o stricthostkeychecking=no -p $ssh_port $ssh_user "docker pull $img"
    - sshpass -e ssh -o stricthostkeychecking=no -p $ssh_port $ssh_user "docker.compose  -f $ssh_path_api up -d jds_auth"
  only:
    - deploy_auth