stages:
  - build
  - deploy

variables:
  #  img: $registry/$registry_name/$CI_PROJECT_NAME:prod-$CI_COMMIT_SHORT_SHA
  #  img_latest: $registry/$registry_name/$CI_PROJECT_NAME:latest
  #  img_stg: $registry/$registry_name/$CI_PROJECT_NAME:stg-$CI_COMMIT_SHORT_SHA
  #  img_latest_stg: $registry/$registry_name/$CI_PROJECT_NAME:stg

  img: $CI_REGISTRY_IMAGE:prod-$CI_COMMIT_SHORT_SHA
  img_latest: $CI_REGISTRY_IMAGE:latest
  img_stg: $CI_REGISTRY_IMAGE:stg-$CI_COMMIT_SHORT_SHA
  img_latest_stg: $CI_REGISTRY_IMAGE:stg

build-master:
  image: docker:19.03.5
  stage: build
  services:
    - docker:19.03.5-dind
  before_script:
    #    - docker login -u "$registry_username" -p "$registry_password" $registry
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - mv production.env .env
  script:
    - docker build -t $img .
    - docker push $img
    - docker tag $img $img_latest
    - docker push $img_latest
  only:
    - deploy

deploy-master:
  stage: deploy
  image: tss182/kubectl:latest
  script:
    - kubectl --kubeconfig="$kubeconfig" set image -n app-prod deployment/api app=$img
  only:
    - deploy

build-stg:
  image: docker:19.03.5
  stage: build
  services:
    - docker:19.03.5-dind
  before_script:
    #    - docker login -u "$registry_username" -p "$registry_password" $registry
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - mv staging.env .env
  script:
    - docker build -t $img_stg .
    - docker push $img_stg
    - docker tag $img_stg $img_latest_stg
    - docker push $img_latest_stg
  only:
    - staging

deploy-stg:
  stage: deploy
  image: tss182/kubectl:latest
  script:
    - kubectl --kubeconfig="$kubeconfig" set image -n app-stg deployment/api app=$img_stg
  only:
    - staging